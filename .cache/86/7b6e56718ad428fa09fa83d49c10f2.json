{"id":"js/script.js","dependencies":[{"name":"/Users/nathanDMac/gitH/graphql-call-sample/package.json","includedInParent":true,"mtime":1636024382661},{"name":"apollo-boost","loc":{"line":3,"column":34},"parent":"/Users/nathanDMac/gitH/graphql-call-sample/js/script.js","resolved":"/Users/nathanDMac/gitH/graphql-call-sample/node_modules/apollo-boost/lib/bundle.esm.js"}],"generated":{"js":"\"use strict\";\n\nvar _apolloBoost = _interopRequireWildcard(require(\"apollo-boost\"));\n\nvar _templateObject;\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// const client = new ApolloClient({\n// \turi: 'https://graphqlzero.almansi.me/api',\n// });\n// client\n// \t.query({\n// \t\tquery: gql`\n// \t\t\t{\n// \t\t\t\tuser(id: 4) {\n// \t\t\t\t\tid\n//                     username\n//                     address {\n//                         geo {\n//                             lat\n//                             lng\n//                         }\n//                     }\n// \t\t\t\t}\n// \t\t\t}\n// \t\t`,\n// \t})\n//     .then(console.log);\nfunction makeGQLCall() {\n  return _makeGQLCall.apply(this, arguments);\n}\n\nfunction _makeGQLCall() {\n  _makeGQLCall = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var gqlUrl, client, json;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            gqlUrl = 'https://graphqlzero.almansi.me/api';\n            client = new _apolloBoost.default({\n              uri: gqlUrl\n            });\n            _context.next = 4;\n            return client.query({\n              query: (0, _apolloBoost.gql)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n\\t\\t\\t{\\n\\t\\t\\t\\tposts {\\n\\t\\t\\t\\t\\tdata {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\"])))\n            });\n\n          case 4:\n            json = _context.sent;\n            console.log(json.data.posts.data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _makeGQLCall.apply(this, arguments);\n}\n\nmakeGQLCall();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"js/script.js","original":{"line":3,"column":0}},{"generated":{"line":17,"column":0},"source":"js/script.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"js/script.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"js/script.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"js/script.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"js/script.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"js/script.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"js/script.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":0},"source":"js/script.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"js/script.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"js/script.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"js/script.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"js/script.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"js/script.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"js/script.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"js/script.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"js/script.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"js/script.js","original":{"line":21,"column":0}},{"generated":{"line":34,"column":0},"source":"js/script.js","original":{"line":22,"column":0}},{"generated":{"line":35,"column":0},"source":"js/script.js","original":{"line":23,"column":0}},{"generated":{"line":36,"column":0},"source":"js/script.js","original":{"line":24,"column":0}},{"generated":{"line":37,"column":0},"source":"js/script.js","original":{"line":25,"column":0}},{"name":"makeGQLCall","generated":{"line":38,"column":9},"source":"js/script.js","original":{"line":31,"column":15}},{"generated":{"line":43,"column":73},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":44,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":45,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":46,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":47,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":48,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"name":"gqlUrl","generated":{"line":49,"column":0},"source":"js/script.js","original":{"line":32,"column":7}},{"name":"gqlUrl","generated":{"line":49,"column":12},"source":"js/script.js","original":{"line":32,"column":7}},{"generated":{"line":49,"column":18},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":49,"column":21},"source":"js/script.js","original":{"line":32,"column":16}},{"generated":{"line":49,"column":57},"source":"js/script.js","original":{"line":31,"column":0}},{"name":"client","generated":{"line":50,"column":0},"source":"js/script.js","original":{"line":34,"column":7}},{"name":"client","generated":{"line":50,"column":12},"source":"js/script.js","original":{"line":34,"column":7}},{"generated":{"line":50,"column":18},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":50,"column":21},"source":"js/script.js","original":{"line":34,"column":16}},{"name":"ApolloClient","generated":{"line":50,"column":25},"source":"js/script.js","original":{"line":34,"column":20}},{"generated":{"line":50,"column":45},"source":"js/script.js","original":{"line":34,"column":16}},{"generated":{"line":50,"column":46},"source":"js/script.js","original":{"line":34,"column":33}},{"name":"uri","generated":{"line":51,"column":0},"source":"js/script.js","original":{"line":35,"column":2}},{"name":"uri","generated":{"line":51,"column":14},"source":"js/script.js","original":{"line":35,"column":2}},{"generated":{"line":51,"column":17},"source":"js/script.js","original":{"line":35,"column":5}},{"name":"gqlUrl","generated":{"line":51,"column":19},"source":"js/script.js","original":{"line":35,"column":7}},{"generated":{"line":52,"column":0},"source":"js/script.js","original":{"line":34,"column":33}},{"generated":{"line":52,"column":13},"source":"js/script.js","original":{"line":34,"column":16}},{"generated":{"line":52,"column":14},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":53,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":54,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"name":"client","generated":{"line":54,"column":19},"source":"js/script.js","original":{"line":38,"column":20}},{"generated":{"line":54,"column":25},"source":"js/script.js","original":{"line":38,"column":26}},{"name":"query","generated":{"line":54,"column":26},"source":"js/script.js","original":{"line":38,"column":27}},{"generated":{"line":54,"column":31},"source":"js/script.js","original":{"line":38,"column":20}},{"generated":{"line":54,"column":32},"source":"js/script.js","original":{"line":38,"column":33}},{"name":"query","generated":{"line":55,"column":0},"source":"js/script.js","original":{"line":39,"column":2}},{"name":"query","generated":{"line":55,"column":14},"source":"js/script.js","original":{"line":39,"column":2}},{"generated":{"line":55,"column":19},"source":"js/script.js","original":{"line":39,"column":7}},{"name":"gql","generated":{"line":55,"column":25},"source":"js/script.js","original":{"line":39,"column":9}},{"generated":{"line":55,"column":41},"source":"js/script.js","original":{"line":39,"column":7}},{"generated":{"line":56,"column":0},"source":"js/script.js","original":{"line":38,"column":33}},{"generated":{"line":56,"column":13},"source":"js/script.js","original":{"line":38,"column":20}},{"generated":{"line":56,"column":14},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":58,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"name":"json","generated":{"line":59,"column":0},"source":"js/script.js","original":{"line":38,"column":7}},{"name":"json","generated":{"line":59,"column":12},"source":"js/script.js","original":{"line":38,"column":7}},{"generated":{"line":59,"column":16},"source":"js/script.js","original":{"line":31,"column":0}},{"name":"console","generated":{"line":60,"column":0},"source":"js/script.js","original":{"line":50,"column":1}},{"name":"console","generated":{"line":60,"column":12},"source":"js/script.js","original":{"line":50,"column":1}},{"generated":{"line":60,"column":19},"source":"js/script.js","original":{"line":50,"column":8}},{"name":"log","generated":{"line":60,"column":20},"source":"js/script.js","original":{"line":50,"column":9}},{"generated":{"line":60,"column":23},"source":"js/script.js","original":{"line":50,"column":1}},{"name":"json","generated":{"line":60,"column":24},"source":"js/script.js","original":{"line":50,"column":13}},{"generated":{"line":60,"column":28},"source":"js/script.js","original":{"line":50,"column":17}},{"name":"data","generated":{"line":60,"column":29},"source":"js/script.js","original":{"line":50,"column":18}},{"generated":{"line":60,"column":33},"source":"js/script.js","original":{"line":50,"column":13}},{"name":"posts","generated":{"line":60,"column":34},"source":"js/script.js","original":{"line":50,"column":23}},{"generated":{"line":60,"column":39},"source":"js/script.js","original":{"line":50,"column":13}},{"name":"data","generated":{"line":60,"column":40},"source":"js/script.js","original":{"line":50,"column":29}},{"generated":{"line":60,"column":44},"source":"js/script.js","original":{"line":50,"column":1}},{"generated":{"line":62,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":63,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":64,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":65,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":66,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":67,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":68,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"name":"makeGQLCall","generated":{"line":72,"column":0},"source":"js/script.js","original":{"line":53,"column":0}},{"generated":{"line":72,"column":11},"source":"js/script.js","original":{"line":53,"column":11}}],"sources":{"js/script.js":"\n\nimport ApolloClient, { gql } from 'apollo-boost';\n\n// const client = new ApolloClient({\n// \turi: 'https://graphqlzero.almansi.me/api',\n// });\n// client\n// \t.query({\n// \t\tquery: gql`\n// \t\t\t{\n// \t\t\t\tuser(id: 4) {\n// \t\t\t\t\tid\n//                     username\n//                     address {\n//                         geo {\n//                             lat\n//                             lng\n//                         }\n//                     }\n// \t\t\t\t}\n// \t\t\t}\n// \t\t`,\n// \t})\n//     .then(console.log);\n    \n\n\n\n\nasync function makeGQLCall() {\n\tconst gqlUrl = 'https://graphqlzero.almansi.me/api';\n\n\tconst client = new ApolloClient({\n\t\turi: gqlUrl,\n\t});\n\n\tconst json = await client.query({\n\t\tquery: gql`\n\t\t\t{\n\t\t\t\tposts {\n\t\t\t\t\tdata {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t});\n\tconsole.log(json.data.posts.data);\n}\n\nmakeGQLCall();\n\n"},"lineCount":null}},"error":null,"hash":"8e2ad9be629b31cd5d7cc2cdfca60f16","cacheData":{"env":{}}}